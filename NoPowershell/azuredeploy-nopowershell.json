{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VirtualMachinename": {
      "type": "string"
    },
    "AdminUserName": {
      "type": "string"
    },
    "AdminPassword": {
      "type": "securestring"
    },
    "VirtualNetworkName": {
      "type": "string"
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_B2ms"
    },
    "WindowsOSVersion": {
      "type": "string"
    },
    "timeZone": {
      "type": "string"
    },
    "subnetName": {
      "type": "string"
    },
    "virtualNetResourceGroupName": {
      "type": "string"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    },
    "DSCArchiveFileName": {
      "type": "string"
    },
    "domainName": {
      "type": "string"
    },
    "NetBiosDomainname": {
      "type": "string"
    },
    "addUsers": {
      "type": "bool",
      "defaultValue": true
    },
    "identityName": {
      "type": "string",
      "defaultValue": "addCustomDNSId"
    },
    "roleAssignimentTemplateURI": {

      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/noendscripting/ADForestSingle/master/NoPowershell/roleassigniment-template.json"
    },
    "DscArchiveFileUri":{
      "type": "string",
      "defaultValue": "https://github.com/noendscripting/ADForestSingle/blob/f35014cbddd4dfac2b86906290b861251e7bb49f/DSC/DCConfig.zip"
    },
    "CustomScriptUri" : {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/noendscripting/ADForestSingle/master/CustomScripts"
    }
    
  },


  "variables": {
    "VnetID": "[resourceId(parameters('virtualNetResourceGroupName'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkname'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "ImagePublisher": "MicrosoftWindowsServer",
    "ImageOffer": "WindowsServer",
    "DscConfigurationScript": "DCConfig.ps1",
    "DscConfigurationFunction": "DcConfig",
    "DscArchiveFileUri": "[concat(parameters('_artifactsLocation'),'/',parameters('DSCArchiveFileName'))]",
    "roleDeploymentName": "[concat(deployment().name,'RoleAssigniment')]",
    "CustomDCScriptScriptFileName": "CustomScript.ps1",
    "CustomScriptScriptFolder": "CustomScripts",
    "CustomScriptURis": [
      "[concat(parameters('CustomScriptURi'),'/', variables('CustomScriptScriptFolder'), '/', variables('CustomDCScriptScriptFileName'))]",
      "[concat(parameters('CustomScriptURi'),'/', variables('CustomScriptScriptFolder'), '/Users.csv')]",
      "[concat(parameters('CustomScriptURi'),'/', variables('CustomScriptScriptFolder'), '/Groups.csv')]",
      "[concat(parameters('CustomScriptURi'),'/', variables('CustomScriptScriptFolder'), '/OUs.csv')]",
      "[concat(parameters('CustomScriptURi'),'/', variables('CustomScriptScriptFolder'), '/Members.csv')]"
    ]

  },
  "resources": [
    // Create Managed Identity
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[parameters('identityName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "DNSconfigID"
      }
    },
    //Assign Network Contributor Role to Managed Identity
    {
      "name": "[concat(variables('roleDeploymentName'),'networkRG')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[resourceId(resourceGroup().name,'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]"
      ],
      "resourceGroup": "[parameters('virtualNetResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[parameters('roleAssignimentTemplateURI')]"
        },
        "parameters": {
          "roleDefenitionId": {
            "value": "4d97b98b-1d4f-4787-a291-c67834d212e7"
          },
          "principalId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2018-11-30').principalId]"
          },
          "roleName": {
            "value": "Network Contributor"
          }
        }
      }
    },
    //Assign Virtual Machine Contributor Role to Managed Identity
    {
      "name": "[concat(variables('roleDeploymentName'),'DCRG')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[resourceId(resourceGroup().name,'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]"
      ],
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[parameters('roleAssignimentTemplateURI')]"
        },
        "parameters": {
          "roleDefenitionId": {
            "value": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
          },
          "principalId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2018-11-30').principalId]"
          },
          "roleName": {
            "value": "Virtual Machine Contributor"
          }
        }
      }
    },
    //DC NIC
    {
      "comments": "# DC NIC",
      "name": "[concat(parameters('VirtualMachinename'),'NIC')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "DC NIC"
      },
      "apiVersion": "2015-06-15",
      "dependsOn": [
      ],

      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },

    // DC VM - VM promoted as Domain Controller
    {
      "comments": "# DC VM",
      "name": "[parameters('VirtualMachinename')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2019-03-01",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('VirtualMachinename'),'NIC')]"
      ],
      "tags": {
        "displayName": "DC"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VirtualMachinename')]",
          "adminUsername": "[parameters('AdminUsername')]",
          "adminPassword": "[parameters('AdminPassword')]",
          "windowsConfiguration": {
            "timeZone": "[parameters('timeZone')]",
            "winRM": {
              "listeners": [
                {
                  "protocol": "Http"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('ImagePublisher')]",
            "offer": "[variables('ImageOffer')]",
            "sku": "[parameters('WindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "caching": "ReadWrite"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('VirtualMachinename'),'NIC'))]"
            }
          ]
        }
      }
    },
    {
      "name": "[concat(parameters('VirtualMachinename'),'/',parameters('NetBiosDomainname'),'-DSC-ForestBuild')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2019-03-01",

      "location": "[resourceGroup().location]",
      "tags": {
        "DisplayName": "DC-DCS"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines',parameters('VirtualMachinename'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.26",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "wmfVersion": "latest",

          "configuration": {
            "script": "[variables('DscConfigurationScript')]",
            "url": "[parameters('DscArchiveFileUri')]",
            "function": "[variables('DscConfigurationFunction')]"

          },
          "configurationArguments": {
            "domainName": "[parameters('domainName')]",
            "NetBiosDomainname": "[parameters('NetBiosDomainname')]"

          }
        },
        "protectedSettings": {
          "configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]",
          "configurationArguments": {
            "DomainAdminCredentials": {
              "UserName": "[parameters('AdminUserName')]",
              "Password": "[parameters('AdminPassword')]"
            }
          }
        }
      }

    },

    // DC Import Custom Script
    {
      "name": "[concat(parameters('VirtualMachinename'),'/',parameters('NetBiosDomainname'),'-DC-ImportScript')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "condition": "[equals(parameters('addUsers'),true())]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/extensions',parameters('VirtualMachinename'),concat(parameters('NetBiosDomainname'),'-DSC-ForestBuild'))]"
      ],
      "tags": {
        "displayName": "DCImportScript"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[variables('CustomScriptURis')]"
        },
        "protectedSettings": {
          "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('CustomScriptScriptFolder'), '/', variables('CustomDCScriptScriptFileName'))]"
        }
      }

    },
    //Setting DNS on the VNET
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "CustomDNS",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/',variables('roleDeploymentName'),'networkRG')]",
        "[concat('Microsoft.Resources/deployments/',variables('roleDeploymentName'),'DCRG')]",
        "[resourceId('Microsoft.Compute/virtualMachines/extensions',parameters('VirtualMachinename'),Concat(parameters('NetBiosDomainname'),'-DC-ImportScript'))]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName'))]": {}
        }
      },

      "kind": "AzurePowerShell",
      "properties": {
        "azPowerShellVersion": "5.0",
        "timeout": "PT30M",
        "arguments": "[format(' -resourceGroup {0} -vnetName {1} -dcName {2} -vNetResourceGroupName {3}', resourceGroup().name, parameters('virtualNetworkName'),parameters('VirtualMachinename'), parameters('virtualNetResourceGroupName'))]", // can pass an arguement string, double quotes must be escaped
        "primaryScriptUri": "[concat(parameters('CustomScriptUri'),'/', variables('CustomScriptScriptFolder'), '/set-customdns.ps1')]",
        "cleanupPreference": "Always",
        "retentionInterval": "P1D"
      }
    } 
    



  ],
  "outputs": {
  }
}
